name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - .github/CODE_OF_CONDUCT.md
      - .github/CODEOWNERS
      - .github/dependabot.yml
      - .github/FUNDING.yml
      - LICENSE
      - .gitignore
  pull_request:
    paths-ignore:
      - .github/CODE_OF_CONDUCT.md
      - .github/CODEOWNERS
      - .github/dependabot.yml
      - .github/FUNDING.yml
      - LICENSE
      - .gitignore

permissions:
  contents: read

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: --deny warnings

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Init toolchain
        uses: dtolnay/rust-toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          components: rustfmt,clippy
      - name: Fmt
        run: cargo fmt --check
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: v2-cargo-${{runner.os}}-${{steps.toolchain.outputs.cachekey}}-${{ hashFiles('**/Cargo.lock') }}-lint-
          restore-keys: |
            v2-cargo-${{runner.os}}-${{steps.toolchain.outputs.cachekey}}-
            v2-cargo-${{runner.os}}
      - name: Clippy
        run: cargo clippy --workspace --tests
      - name: Install cargo-rdme
        continue-on-error: true
        run: cargo install cargo-rdme --debug --version ^1
      - name: Run cargo-rdme
        run: cargo rdme --check

  test:
    name: Rust ${{matrix.toolchain}} on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        toolchain:
          - stable
          - 1.60.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Init toolchain
        uses: dtolnay/rust-toolchain@v1
        id: toolchain
        with:
          toolchain: ${{matrix.toolchain}}
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: v2-cargo-${{runner.os}}-${{steps.toolchain.outputs.cachekey}}-${{ hashFiles('**/Cargo.lock') }}-test-
          restore-keys: |
            v2-cargo-${{runner.os}}-${{steps.toolchain.outputs.cachekey}}-
            v2-cargo-${{runner.os}}
      - name: Build
        run: cargo build --workspace --tests --locked
      - name: Test
        run: cargo test --workspace --locked

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - lint
      - test
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{ secrets.GH_TOKEN }}
      - name: Parse
        id: parse
        uses: alorel-actions/semantic-release-lite@v0
        with:
          minor-types: |
            feat: Features
          patch-types: |
            fix: Bug Fixes
          trivial-types: |
            chore: Maintenance
            deps: Dependency updates
            ci: CI & Build
            build: CI & Build
            refactor: Refactors
            docs: Documentation
            perf: Performance
      - name: Prep release
        if: ${{ steps.parse.outputs.should-release }}
        id: prep
        uses: ./.github/actions/prep-release
        with:
          release-type: ${{ steps.parse.outputs.release-type }}
          version: ${{ steps.parse.outputs.next-version }}
      - name: Release
        if: ${{ steps.prep.outputs.in-sync }}
        uses: ./.github/actions/release
        with:
          version: ${{ steps.parse.outputs.next-version }}
          changelog: ${{ steps.parse.outputs.changelog }}
          issues-closed: ${{ steps.parse.outputs.issues-closed }}
          crates-io-token: ${{ secrets.CRATES_IO_TOKEN }}
